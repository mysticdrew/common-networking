plugins {
    id 'idea'
    id 'java'
    id 'net.neoforged.moddev'
    id 'maven-publish'
}

version = "${project.version}-${project.minecraft_version}"
group = project.group_id
archivesBaseName = "${project.base_name}" + "-common"

test {
    useJUnitPlatform()
}

neoForge {
    neoFormVersion = neo_form_version
    // Automatically enable AccessTransformers if the file exists
    // While this location can be changed, it is recommended for
    // common and neoforge to share an accesstransformer file
    // and this location is hardcoded in FML
    // https://github.com/neoforged/FancyModLoader/blob/a952595eaaddd571fbc53f43847680b00894e0c1/loader/src/main/java/net/neoforged/fml/loading/moddiscovery/ModFile.java#L118
    def at = file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.add(at.absolutePath)
    }
    addModdingDependenciesTo(sourceSets["test"])
    parchment {
        minecraftVersion = mappings_mc_version
        mappingsVersion = mappings_date
    }
}

dependencies {
     compileOnly group:'org.spongepowered', name:'mixin', version:'0.8.5'
     implementation group: 'com.google.code.findbugs', name: 'jsr305', version: '3.0.1'
}

processResources {

    def buildProps = project.properties.clone()

    filesMatching(['pack.mcmeta']) {

        expand buildProps
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java
        }
    }

    repositories {
        maven {
            name = "CommonNetworking"
            url = uri("https://jm.gserv.me/repository/maven-releases/")

            credentials {
                username = project.findProperty("deploy.user") ?: System.getenv("DEPLOY_USER")
                password = project.findProperty("deploy.password") ?: System.getenv("DEPLOY_PASSWORD")
            }
        }
    }
}
